apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

detekt {
    version = "1.0.0-RC14"
    input = files("${project.rootDir}/${project.getName()}/src/main/java")
    config = files("${project.rootDir}/configs/detekt-config.yml")
    filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
    reports {
        xml {
            enabled = true
            destination = file("build/reports/detekt.xml")
        }
        html {
            enabled = true
            destination = file("build/reports/detekt.html")
        }
    }
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.dictionary"
        minSdkVersion 18
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    androidExtensions { experimental = true }
}

ext {
    room = "1.1.1"
    moxy = "1.5.5"
    retrofit = "2.5.0"
    rxkotlin = "2.3.0"
    rxjava = "2.2.3"
    rxandroid = "2.1.0"
    support_library = "28.0.0"
    paging_library = "1.0.1"
    junit = "4.12"
    mockito = "2.8.9"
    powermock = "2.0.0"
    dagger = "2.22.1"
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$support_library"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.3.21'

    //Views
    implementation "com.android.support:recyclerview-v7:$support_library"
    implementation "com.android.support:cardview-v7:$support_library"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"

    //Rx
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlin"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid"

    //Moxy
    kapt "com.arello-mobile:moxy-compiler:$moxy"
    implementation "com.arello-mobile:moxy:$moxy"
    implementation "com.arello-mobile:moxy-app-compat:$moxy"

    //Paging Library
    implementation "android.arch.paging:runtime:$paging_library"

    //Room
    kapt "android.arch.persistence.room:compiler:$room"
    annotationProcessor "android.arch.persistence.room:compiler:$room"
    implementation "android.arch.persistence.room:runtime:$room"
    implementation "android.arch.persistence.room:rxjava2:$room"

    //Dagger 2
    kapt "com.google.dagger:dagger-compiler:$dagger"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger"
    implementation "com.google.dagger:dagger:$dagger"

    //JUnit, Mockito, PowerMock
    testImplementation "junit:junit:$junit"
    testImplementation "org.mockito:mockito-core:$mockito"
    testImplementation "org.mockito:mockito-inline:$mockito"
    testImplementation "org.powermock:powermock-api-mockito2:$powermock"
    testImplementation "org.powermock:powermock-module-junit4:$powermock"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powermock"
    testImplementation "org.powermock:powermock-classloading-xstream:$powermock"
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

repositories {
    mavenCentral()
}